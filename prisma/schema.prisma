// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  companies Company[]  @relation("UserCompanies")
  feedbacks Feedback[] @relation("UserFeedbacks")

  @@map("users")
}

model Company {
  id        String     @id @default(uuid())
  name      String
  cnpj      String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  users     User[]     @relation("UserCompanies")
  feedbacks Feedback[] @relation("CompanyFeedbacks")

  @@map("companies")
}

model Feedback {
  id        String   @id @default(uuid())
  comment   String
  rating    Int
  source    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userEmail String
  userPhone String?
  userName  String
  userId    String
  user      User     @relation("UserFeedbacks", fields: [userId], references: [id], onDelete: Cascade)
  companyId String
  company   Company  @relation("CompanyFeedbacks", fields: [companyId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([companyId])
  @@map("feedbacks")
}
